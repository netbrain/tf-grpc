// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow_serving/servables/tensorflow/session_bundle_source_adapter.proto

package tensorflow_serving // import "github.com/netbrain/tf-grpc/go/serving/tensorflow_serving"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Config proto for SessionBundleSourceAdapter.
type SessionBundleSourceAdapterConfig struct {
	Config               *SessionBundleConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *SessionBundleSourceAdapterConfig) Reset()         { *m = SessionBundleSourceAdapterConfig{} }
func (m *SessionBundleSourceAdapterConfig) String() string { return proto.CompactTextString(m) }
func (*SessionBundleSourceAdapterConfig) ProtoMessage()    {}
func (*SessionBundleSourceAdapterConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_session_bundle_source_adapter_8e3cedd471f95cd0, []int{0}
}
func (m *SessionBundleSourceAdapterConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SessionBundleSourceAdapterConfig.Unmarshal(m, b)
}
func (m *SessionBundleSourceAdapterConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SessionBundleSourceAdapterConfig.Marshal(b, m, deterministic)
}
func (dst *SessionBundleSourceAdapterConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SessionBundleSourceAdapterConfig.Merge(dst, src)
}
func (m *SessionBundleSourceAdapterConfig) XXX_Size() int {
	return xxx_messageInfo_SessionBundleSourceAdapterConfig.Size(m)
}
func (m *SessionBundleSourceAdapterConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_SessionBundleSourceAdapterConfig.DiscardUnknown(m)
}

var xxx_messageInfo_SessionBundleSourceAdapterConfig proto.InternalMessageInfo

func (m *SessionBundleSourceAdapterConfig) GetConfig() *SessionBundleConfig {
	if m != nil {
		return m.Config
	}
	return nil
}

func init() {
	proto.RegisterType((*SessionBundleSourceAdapterConfig)(nil), "tensorflow.serving.SessionBundleSourceAdapterConfig")
}

func init() {
	proto.RegisterFile("tensorflow_serving/servables/tensorflow/session_bundle_source_adapter.proto", fileDescriptor_session_bundle_source_adapter_8e3cedd471f95cd0)
}

var fileDescriptor_session_bundle_source_adapter_8e3cedd471f95cd0 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x8f, 0xaf, 0xaf, 0xc2, 0x30,
	0x10, 0xc7, 0x33, 0x33, 0xb1, 0xe7, 0xa6, 0x5e, 0x50, 0x0b, 0x06, 0x0c, 0x6d, 0x02, 0x8a, 0x20,
	0x08, 0x9b, 0xc4, 0x31, 0x87, 0x69, 0xda, 0xee, 0x56, 0x9a, 0x8c, 0xde, 0xd2, 0x76, 0xf0, 0xef,
	0x13, 0xda, 0x91, 0x85, 0xcc, 0xa1, 0x4e, 0x7c, 0x7f, 0x7d, 0x2e, 0x3b, 0x7b, 0x30, 0x0e, 0x6d,
	0xdb, 0xe1, 0x93, 0x39, 0xb0, 0x0f, 0x6d, 0x14, 0x7d, 0x5f, 0x2e, 0x3a, 0x70, 0x74, 0x12, 0xa9,
	0x03, 0xe7, 0x34, 0x1a, 0x26, 0x06, 0xd3, 0x74, 0xc0, 0x1c, 0x0e, 0x56, 0x02, 0xe3, 0x0d, 0xef,
	0x3d, 0x58, 0xd2, 0x5b, 0xf4, 0x98, 0xe7, 0x93, 0x9f, 0x8c, 0x65, 0x8b, 0xea, 0xc7, 0x01, 0x89,
	0xa6, 0xd5, 0x2a, 0x16, 0x2f, 0x65, 0x56, 0xd4, 0x51, 0x2e, 0x83, 0x5a, 0x87, 0xf5, 0x53, 0x1c,
	0xaf, 0x82, 0x33, 0x3f, 0x66, 0x69, 0xcc, 0xfc, 0x27, 0x45, 0xb2, 0xfe, 0xdb, 0xae, 0xc8, 0x9c,
	0x86, 0x7c, 0xb5, 0xc4, 0xe0, 0x65, 0x8c, 0x95, 0x87, 0xeb, 0x5e, 0x69, 0x7f, 0x1b, 0x04, 0x91,
	0x78, 0xa7, 0x06, 0xbc, 0xb0, 0x5c, 0x1b, 0xea, 0xdb, 0x8d, 0xb2, 0xbd, 0xa4, 0x0a, 0xe9, 0x87,
	0x7f, 0xfe, 0x92, 0x48, 0x03, 0xe8, 0xee, 0x15, 0x00, 0x00, 0xff, 0xff, 0x68, 0xdd, 0x89, 0xdd,
	0x50, 0x01, 0x00, 0x00,
}
