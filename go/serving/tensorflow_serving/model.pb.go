// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow_serving/apis/model.proto

package tensorflow_serving // import "github.com/netbrain/tf-grpc/go/serving/tensorflow_serving"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import wrappers "github.com/golang/protobuf/ptypes/wrappers"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Metadata for an inference request such as the model name and version.
type ModelSpec struct {
	// Required servable name.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Optional choice of which version of the model to use.
	//
	// Recommended to be left unset in the common case. Should be specified only
	// when there is a strong version consistency requirement.
	//
	// When left unspecified, the system will serve the best available version.
	// This is typically the latest version, though during version transitions,
	// notably when serving on a fleet of instances, may be either the previous or
	// new version.
	//
	// Types that are valid to be assigned to VersionChoice:
	//	*ModelSpec_Version
	//	*ModelSpec_VersionLabel
	VersionChoice isModelSpec_VersionChoice `protobuf_oneof:"version_choice"`
	// A named signature to evaluate. If unspecified, the default signature will
	// be used.
	SignatureName        string   `protobuf:"bytes,3,opt,name=signature_name,json=signatureName,proto3" json:"signature_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ModelSpec) Reset()         { *m = ModelSpec{} }
func (m *ModelSpec) String() string { return proto.CompactTextString(m) }
func (*ModelSpec) ProtoMessage()    {}
func (*ModelSpec) Descriptor() ([]byte, []int) {
	return fileDescriptor_model_05c4a3029921caa5, []int{0}
}
func (m *ModelSpec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ModelSpec.Unmarshal(m, b)
}
func (m *ModelSpec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ModelSpec.Marshal(b, m, deterministic)
}
func (dst *ModelSpec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ModelSpec.Merge(dst, src)
}
func (m *ModelSpec) XXX_Size() int {
	return xxx_messageInfo_ModelSpec.Size(m)
}
func (m *ModelSpec) XXX_DiscardUnknown() {
	xxx_messageInfo_ModelSpec.DiscardUnknown(m)
}

var xxx_messageInfo_ModelSpec proto.InternalMessageInfo

func (m *ModelSpec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type isModelSpec_VersionChoice interface {
	isModelSpec_VersionChoice()
}

type ModelSpec_Version struct {
	Version *wrappers.Int64Value `protobuf:"bytes,2,opt,name=version,proto3,oneof"`
}

type ModelSpec_VersionLabel struct {
	VersionLabel string `protobuf:"bytes,4,opt,name=version_label,json=versionLabel,proto3,oneof"`
}

func (*ModelSpec_Version) isModelSpec_VersionChoice() {}

func (*ModelSpec_VersionLabel) isModelSpec_VersionChoice() {}

func (m *ModelSpec) GetVersionChoice() isModelSpec_VersionChoice {
	if m != nil {
		return m.VersionChoice
	}
	return nil
}

func (m *ModelSpec) GetVersion() *wrappers.Int64Value {
	if x, ok := m.GetVersionChoice().(*ModelSpec_Version); ok {
		return x.Version
	}
	return nil
}

func (m *ModelSpec) GetVersionLabel() string {
	if x, ok := m.GetVersionChoice().(*ModelSpec_VersionLabel); ok {
		return x.VersionLabel
	}
	return ""
}

func (m *ModelSpec) GetSignatureName() string {
	if m != nil {
		return m.SignatureName
	}
	return ""
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*ModelSpec) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _ModelSpec_OneofMarshaler, _ModelSpec_OneofUnmarshaler, _ModelSpec_OneofSizer, []interface{}{
		(*ModelSpec_Version)(nil),
		(*ModelSpec_VersionLabel)(nil),
	}
}

func _ModelSpec_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*ModelSpec)
	// version_choice
	switch x := m.VersionChoice.(type) {
	case *ModelSpec_Version:
		b.EncodeVarint(2<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Version); err != nil {
			return err
		}
	case *ModelSpec_VersionLabel:
		b.EncodeVarint(4<<3 | proto.WireBytes)
		b.EncodeStringBytes(x.VersionLabel)
	case nil:
	default:
		return fmt.Errorf("ModelSpec.VersionChoice has unexpected type %T", x)
	}
	return nil
}

func _ModelSpec_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*ModelSpec)
	switch tag {
	case 2: // version_choice.version
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(wrappers.Int64Value)
		err := b.DecodeMessage(msg)
		m.VersionChoice = &ModelSpec_Version{msg}
		return true, err
	case 4: // version_choice.version_label
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		x, err := b.DecodeStringBytes()
		m.VersionChoice = &ModelSpec_VersionLabel{x}
		return true, err
	default:
		return false, nil
	}
}

func _ModelSpec_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*ModelSpec)
	// version_choice
	switch x := m.VersionChoice.(type) {
	case *ModelSpec_Version:
		s := proto.Size(x.Version)
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(s))
		n += s
	case *ModelSpec_VersionLabel:
		n += 1 // tag and wire
		n += proto.SizeVarint(uint64(len(x.VersionLabel)))
		n += len(x.VersionLabel)
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

func init() {
	proto.RegisterType((*ModelSpec)(nil), "tensorflow.serving.ModelSpec")
}

func init() {
	proto.RegisterFile("tensorflow_serving/apis/model.proto", fileDescriptor_model_05c4a3029921caa5)
}

var fileDescriptor_model_05c4a3029921caa5 = []byte{
	// 265 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0x31, 0x4b, 0x03, 0x31,
	0x18, 0x86, 0x1b, 0x2d, 0x4a, 0xa3, 0x2d, 0x92, 0xa9, 0x28, 0x48, 0x51, 0x0a, 0x5d, 0x4c, 0x40,
	0x45, 0x71, 0x71, 0xe8, 0x54, 0x41, 0x1d, 0x4e, 0x70, 0x70, 0x39, 0x72, 0xe7, 0x77, 0x69, 0x20,
	0x97, 0x2f, 0x24, 0xb9, 0xf6, 0xaf, 0xf9, 0xd3, 0x1c, 0xe5, 0xd2, 0x3b, 0x1d, 0xdc, 0x3e, 0x5e,
	0x9e, 0x3c, 0x6f, 0x78, 0xe9, 0x65, 0x04, 0x1b, 0xd0, 0x57, 0x06, 0xb7, 0x79, 0x00, 0xbf, 0xd1,
	0x56, 0x09, 0xe9, 0x74, 0x10, 0x35, 0x7e, 0x82, 0xe1, 0xce, 0x63, 0x44, 0xc6, 0xfe, 0x20, 0xde,
	0x41, 0xa7, 0xe7, 0x0a, 0x51, 0x19, 0x10, 0x89, 0x28, 0x9a, 0x4a, 0x6c, 0xbd, 0x74, 0x0e, 0x7c,
	0xd8, 0xbd, 0xb9, 0xf8, 0x22, 0x74, 0xf4, 0xd2, 0x3a, 0xde, 0x1c, 0x94, 0x8c, 0xd1, 0xa1, 0x95,
	0x35, 0x4c, 0xc9, 0x8c, 0x2c, 0x46, 0x59, 0xba, 0xd9, 0x3d, 0x3d, 0xdc, 0x80, 0x0f, 0x1a, 0xed,
	0x74, 0x6f, 0x46, 0x16, 0x47, 0xd7, 0x67, 0x7c, 0xe7, 0xe4, 0xbd, 0x93, 0x3f, 0xd9, 0x78, 0x77,
	0xfb, 0x2e, 0x4d, 0x03, 0xab, 0x41, 0xd6, 0xd3, 0x6c, 0x4e, 0xc7, 0xdd, 0x99, 0x1b, 0x59, 0x80,
	0x99, 0x0e, 0x5b, 0xeb, 0x6a, 0x90, 0x1d, 0x77, 0xf1, 0x73, 0x9b, 0xb2, 0x39, 0x9d, 0x04, 0xad,
	0xac, 0x8c, 0x8d, 0x87, 0x3c, 0xb5, 0xef, 0xa7, 0xf6, 0xf1, 0x6f, 0xfa, 0x2a, 0x6b, 0x58, 0x9e,
	0xd0, 0x49, 0x6f, 0x2b, 0xd7, 0xa8, 0x4b, 0x58, 0x3e, 0x7e, 0x3c, 0x28, 0x1d, 0xd7, 0x4d, 0xc1,
	0x4b, 0xac, 0x85, 0x85, 0x58, 0x78, 0xa9, 0xad, 0x88, 0xd5, 0x95, 0xf2, 0xae, 0x14, 0x0a, 0x45,
	0xbf, 0xd4, 0xff, 0xf1, 0xbe, 0x09, 0x29, 0x0e, 0xd2, 0xff, 0x6f, 0x7e, 0x02, 0x00, 0x00, 0xff,
	0xff, 0x50, 0x4a, 0x8b, 0x20, 0x5c, 0x01, 0x00, 0x00,
}
