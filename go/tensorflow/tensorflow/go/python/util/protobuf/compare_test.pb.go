// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/python/util/protobuf/compare_test.proto

package protobuf // import "github.com/netbrain/tf-grpc/go/tensorflow/tensorflow/go/python/util/protobuf"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Enum int32

const (
	Enum_A Enum = 0
	Enum_B Enum = 1
	Enum_C Enum = 2
)

var Enum_name = map[int32]string{
	0: "A",
	1: "B",
	2: "C",
}
var Enum_value = map[string]int32{
	"A": 0,
	"B": 1,
	"C": 2,
}

func (x Enum) Enum() *Enum {
	p := new(Enum)
	*p = x
	return p
}
func (x Enum) String() string {
	return proto.EnumName(Enum_name, int32(x))
}
func (x *Enum) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Enum_value, data, "Enum")
	if err != nil {
		return err
	}
	*x = Enum(value)
	return nil
}
func (Enum) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_compare_test_434cc982dd20fb1d, []int{0}
}

type Small struct {
	Strings              []string `protobuf:"bytes,1,rep,name=strings" json:"strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Small) Reset()         { *m = Small{} }
func (m *Small) String() string { return proto.CompactTextString(m) }
func (*Small) ProtoMessage()    {}
func (*Small) Descriptor() ([]byte, []int) {
	return fileDescriptor_compare_test_434cc982dd20fb1d, []int{0}
}
func (m *Small) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Small.Unmarshal(m, b)
}
func (m *Small) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Small.Marshal(b, m, deterministic)
}
func (dst *Small) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Small.Merge(dst, src)
}
func (m *Small) XXX_Size() int {
	return xxx_messageInfo_Small.Size(m)
}
func (m *Small) XXX_DiscardUnknown() {
	xxx_messageInfo_Small.DiscardUnknown(m)
}

var xxx_messageInfo_Small proto.InternalMessageInfo

func (m *Small) GetStrings() []string {
	if m != nil {
		return m.Strings
	}
	return nil
}

type Medium struct {
	Int32S               []int32          `protobuf:"varint,1,rep,name=int32s" json:"int32s,omitempty"`
	Smalls               []*Small         `protobuf:"bytes,2,rep,name=smalls" json:"smalls,omitempty"`
	Groupa               []*Medium_GroupA `protobuf:"group,3,rep,name=GroupA,json=groupa" json:"groupa,omitempty"`
	Floats               []float32        `protobuf:"fixed32,6,rep,name=floats" json:"floats,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Medium) Reset()         { *m = Medium{} }
func (m *Medium) String() string { return proto.CompactTextString(m) }
func (*Medium) ProtoMessage()    {}
func (*Medium) Descriptor() ([]byte, []int) {
	return fileDescriptor_compare_test_434cc982dd20fb1d, []int{1}
}
func (m *Medium) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medium.Unmarshal(m, b)
}
func (m *Medium) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medium.Marshal(b, m, deterministic)
}
func (dst *Medium) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medium.Merge(dst, src)
}
func (m *Medium) XXX_Size() int {
	return xxx_messageInfo_Medium.Size(m)
}
func (m *Medium) XXX_DiscardUnknown() {
	xxx_messageInfo_Medium.DiscardUnknown(m)
}

var xxx_messageInfo_Medium proto.InternalMessageInfo

func (m *Medium) GetInt32S() []int32 {
	if m != nil {
		return m.Int32S
	}
	return nil
}

func (m *Medium) GetSmalls() []*Small {
	if m != nil {
		return m.Smalls
	}
	return nil
}

func (m *Medium) GetGroupa() []*Medium_GroupA {
	if m != nil {
		return m.Groupa
	}
	return nil
}

func (m *Medium) GetFloats() []float32 {
	if m != nil {
		return m.Floats
	}
	return nil
}

type Medium_GroupA struct {
	Groupb               []*Medium_GroupA_GroupB `protobuf:"group,4,rep,name=GroupB,json=groupb" json:"groupb,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *Medium_GroupA) Reset()         { *m = Medium_GroupA{} }
func (m *Medium_GroupA) String() string { return proto.CompactTextString(m) }
func (*Medium_GroupA) ProtoMessage()    {}
func (*Medium_GroupA) Descriptor() ([]byte, []int) {
	return fileDescriptor_compare_test_434cc982dd20fb1d, []int{1, 0}
}
func (m *Medium_GroupA) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medium_GroupA.Unmarshal(m, b)
}
func (m *Medium_GroupA) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medium_GroupA.Marshal(b, m, deterministic)
}
func (dst *Medium_GroupA) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medium_GroupA.Merge(dst, src)
}
func (m *Medium_GroupA) XXX_Size() int {
	return xxx_messageInfo_Medium_GroupA.Size(m)
}
func (m *Medium_GroupA) XXX_DiscardUnknown() {
	xxx_messageInfo_Medium_GroupA.DiscardUnknown(m)
}

var xxx_messageInfo_Medium_GroupA proto.InternalMessageInfo

func (m *Medium_GroupA) GetGroupb() []*Medium_GroupA_GroupB {
	if m != nil {
		return m.Groupb
	}
	return nil
}

type Medium_GroupA_GroupB struct {
	Strings              *string  `protobuf:"bytes,5,req,name=strings" json:"strings,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Medium_GroupA_GroupB) Reset()         { *m = Medium_GroupA_GroupB{} }
func (m *Medium_GroupA_GroupB) String() string { return proto.CompactTextString(m) }
func (*Medium_GroupA_GroupB) ProtoMessage()    {}
func (*Medium_GroupA_GroupB) Descriptor() ([]byte, []int) {
	return fileDescriptor_compare_test_434cc982dd20fb1d, []int{1, 0, 0}
}
func (m *Medium_GroupA_GroupB) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Medium_GroupA_GroupB.Unmarshal(m, b)
}
func (m *Medium_GroupA_GroupB) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Medium_GroupA_GroupB.Marshal(b, m, deterministic)
}
func (dst *Medium_GroupA_GroupB) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Medium_GroupA_GroupB.Merge(dst, src)
}
func (m *Medium_GroupA_GroupB) XXX_Size() int {
	return xxx_messageInfo_Medium_GroupA_GroupB.Size(m)
}
func (m *Medium_GroupA_GroupB) XXX_DiscardUnknown() {
	xxx_messageInfo_Medium_GroupA_GroupB.DiscardUnknown(m)
}

var xxx_messageInfo_Medium_GroupA_GroupB proto.InternalMessageInfo

func (m *Medium_GroupA_GroupB) GetStrings() string {
	if m != nil && m.Strings != nil {
		return *m.Strings
	}
	return ""
}

type Large struct {
	String_              *string  `protobuf:"bytes,1,opt,name=string_,json=string" json:"string_,omitempty"`
	Int64_               *int64   `protobuf:"varint,2,opt,name=int64_,json=int64" json:"int64_,omitempty"`
	Float_               *float32 `protobuf:"fixed32,3,opt,name=float_,json=float" json:"float_,omitempty"`
	Bool_                *bool    `protobuf:"varint,4,opt,name=bool_,json=bool" json:"bool_,omitempty"`
	Enum_                *Enum    `protobuf:"varint,5,opt,name=enum_,json=enum,enum=compare_test.Enum" json:"enum_,omitempty"`
	Int64S               []int64  `protobuf:"varint,6,rep,name=int64s" json:"int64s,omitempty"`
	Medium               *Medium  `protobuf:"bytes,7,opt,name=medium" json:"medium,omitempty"`
	Small                *Small   `protobuf:"bytes,8,opt,name=small" json:"small,omitempty"`
	Double_              *float64 `protobuf:"fixed64,9,opt,name=double_,json=double" json:"double_,omitempty"`
	WithMap              *WithMap `protobuf:"bytes,10,opt,name=with_map,json=withMap" json:"with_map,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Large) Reset()         { *m = Large{} }
func (m *Large) String() string { return proto.CompactTextString(m) }
func (*Large) ProtoMessage()    {}
func (*Large) Descriptor() ([]byte, []int) {
	return fileDescriptor_compare_test_434cc982dd20fb1d, []int{2}
}
func (m *Large) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Large.Unmarshal(m, b)
}
func (m *Large) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Large.Marshal(b, m, deterministic)
}
func (dst *Large) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Large.Merge(dst, src)
}
func (m *Large) XXX_Size() int {
	return xxx_messageInfo_Large.Size(m)
}
func (m *Large) XXX_DiscardUnknown() {
	xxx_messageInfo_Large.DiscardUnknown(m)
}

var xxx_messageInfo_Large proto.InternalMessageInfo

func (m *Large) GetString_() string {
	if m != nil && m.String_ != nil {
		return *m.String_
	}
	return ""
}

func (m *Large) GetInt64_() int64 {
	if m != nil && m.Int64_ != nil {
		return *m.Int64_
	}
	return 0
}

func (m *Large) GetFloat_() float32 {
	if m != nil && m.Float_ != nil {
		return *m.Float_
	}
	return 0
}

func (m *Large) GetBool_() bool {
	if m != nil && m.Bool_ != nil {
		return *m.Bool_
	}
	return false
}

func (m *Large) GetEnum_() Enum {
	if m != nil && m.Enum_ != nil {
		return *m.Enum_
	}
	return Enum_A
}

func (m *Large) GetInt64S() []int64 {
	if m != nil {
		return m.Int64S
	}
	return nil
}

func (m *Large) GetMedium() *Medium {
	if m != nil {
		return m.Medium
	}
	return nil
}

func (m *Large) GetSmall() *Small {
	if m != nil {
		return m.Small
	}
	return nil
}

func (m *Large) GetDouble_() float64 {
	if m != nil && m.Double_ != nil {
		return *m.Double_
	}
	return 0
}

func (m *Large) GetWithMap() *WithMap {
	if m != nil {
		return m.WithMap
	}
	return nil
}

type Labeled struct {
	Required             *int32   `protobuf:"varint,1,req,name=required" json:"required,omitempty"`
	Optional             *int32   `protobuf:"varint,2,opt,name=optional" json:"optional,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Labeled) Reset()         { *m = Labeled{} }
func (m *Labeled) String() string { return proto.CompactTextString(m) }
func (*Labeled) ProtoMessage()    {}
func (*Labeled) Descriptor() ([]byte, []int) {
	return fileDescriptor_compare_test_434cc982dd20fb1d, []int{3}
}
func (m *Labeled) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Labeled.Unmarshal(m, b)
}
func (m *Labeled) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Labeled.Marshal(b, m, deterministic)
}
func (dst *Labeled) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Labeled.Merge(dst, src)
}
func (m *Labeled) XXX_Size() int {
	return xxx_messageInfo_Labeled.Size(m)
}
func (m *Labeled) XXX_DiscardUnknown() {
	xxx_messageInfo_Labeled.DiscardUnknown(m)
}

var xxx_messageInfo_Labeled proto.InternalMessageInfo

func (m *Labeled) GetRequired() int32 {
	if m != nil && m.Required != nil {
		return *m.Required
	}
	return 0
}

func (m *Labeled) GetOptional() int32 {
	if m != nil && m.Optional != nil {
		return *m.Optional
	}
	return 0
}

type WithMap struct {
	ValueMessage         map[int32]*Small  `protobuf:"bytes,1,rep,name=value_message,json=valueMessage" json:"value_message,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ValueString          map[string]string `protobuf:"bytes,2,rep,name=value_string,json=valueString" json:"value_string,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *WithMap) Reset()         { *m = WithMap{} }
func (m *WithMap) String() string { return proto.CompactTextString(m) }
func (*WithMap) ProtoMessage()    {}
func (*WithMap) Descriptor() ([]byte, []int) {
	return fileDescriptor_compare_test_434cc982dd20fb1d, []int{4}
}
func (m *WithMap) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WithMap.Unmarshal(m, b)
}
func (m *WithMap) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WithMap.Marshal(b, m, deterministic)
}
func (dst *WithMap) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WithMap.Merge(dst, src)
}
func (m *WithMap) XXX_Size() int {
	return xxx_messageInfo_WithMap.Size(m)
}
func (m *WithMap) XXX_DiscardUnknown() {
	xxx_messageInfo_WithMap.DiscardUnknown(m)
}

var xxx_messageInfo_WithMap proto.InternalMessageInfo

func (m *WithMap) GetValueMessage() map[int32]*Small {
	if m != nil {
		return m.ValueMessage
	}
	return nil
}

func (m *WithMap) GetValueString() map[string]string {
	if m != nil {
		return m.ValueString
	}
	return nil
}

func init() {
	proto.RegisterType((*Small)(nil), "compare_test.Small")
	proto.RegisterType((*Medium)(nil), "compare_test.Medium")
	proto.RegisterType((*Medium_GroupA)(nil), "compare_test.Medium.GroupA")
	proto.RegisterType((*Medium_GroupA_GroupB)(nil), "compare_test.Medium.GroupA.GroupB")
	proto.RegisterType((*Large)(nil), "compare_test.Large")
	proto.RegisterType((*Labeled)(nil), "compare_test.Labeled")
	proto.RegisterType((*WithMap)(nil), "compare_test.WithMap")
	proto.RegisterMapType((map[int32]*Small)(nil), "compare_test.WithMap.ValueMessageEntry")
	proto.RegisterMapType((map[string]string)(nil), "compare_test.WithMap.ValueStringEntry")
	proto.RegisterEnum("compare_test.Enum", Enum_name, Enum_value)
}

func init() {
	proto.RegisterFile("tensorflow/python/util/protobuf/compare_test.proto", fileDescriptor_compare_test_434cc982dd20fb1d)
}

var fileDescriptor_compare_test_434cc982dd20fb1d = []byte{
	// 615 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0x5f, 0x6f, 0xd3, 0x3c,
	0x14, 0xc6, 0x5f, 0x27, 0x75, 0xda, 0x9e, 0xee, 0x45, 0xc5, 0xdb, 0xc0, 0xea, 0x6e, 0x42, 0x2f,
	0x58, 0xf8, 0xd7, 0xa0, 0x6e, 0x9a, 0xd0, 0x2e, 0x90, 0x56, 0x34, 0x21, 0xa4, 0xee, 0x02, 0x0f,
	0x81, 0xc4, 0x4d, 0x94, 0xac, 0x6e, 0x1a, 0x91, 0xc4, 0x21, 0x71, 0x36, 0xed, 0x9e, 0x0f, 0xc5,
	0x47, 0xe0, 0x23, 0x71, 0x89, 0x6c, 0x67, 0x23, 0x85, 0xb2, 0x2b, 0xfb, 0x39, 0xf9, 0xe5, 0x39,
	0xf6, 0x39, 0x47, 0x86, 0xa9, 0xe4, 0x79, 0x25, 0xca, 0x65, 0x2a, 0xae, 0xfc, 0xe2, 0x5a, 0xae,
	0x44, 0xee, 0xd7, 0x32, 0x49, 0xfd, 0xa2, 0x14, 0x52, 0x44, 0xf5, 0xd2, 0xbf, 0x10, 0x59, 0x11,
	0x96, 0x3c, 0x90, 0xbc, 0x92, 0x13, 0x1d, 0x25, 0x5b, 0xed, 0xd8, 0xf8, 0x11, 0xe0, 0xf3, 0x2c,
	0x4c, 0x53, 0x42, 0xa1, 0x5b, 0xc9, 0x32, 0xc9, 0xe3, 0x8a, 0x22, 0xd7, 0xf6, 0xfa, 0xec, 0x46,
	0x8e, 0xbf, 0x59, 0xe0, 0x9c, 0xf1, 0x45, 0x52, 0x67, 0xe4, 0x01, 0x38, 0x49, 0x2e, 0x0f, 0xa6,
	0x86, 0xc1, 0xac, 0x51, 0xe4, 0x19, 0x38, 0x95, 0x72, 0xa9, 0xa8, 0xe5, 0xda, 0xde, 0x60, 0xba,
	0x3d, 0x59, 0x4b, 0xac, 0x33, 0xb0, 0x06, 0x21, 0x07, 0xe0, 0xc4, 0xa5, 0xa8, 0x8b, 0x90, 0xda,
	0xae, 0xed, 0xc1, 0x74, 0x6f, 0x1d, 0x36, 0xa9, 0x26, 0x6f, 0x15, 0x72, 0xc2, 0x1a, 0x54, 0x65,
	0x5e, 0xa6, 0x22, 0x94, 0x15, 0x75, 0x5c, 0xdb, 0xb3, 0x58, 0xa3, 0x46, 0x2b, 0x70, 0x0c, 0x49,
	0x8e, 0x1b, 0xdb, 0x88, 0x76, 0xb4, 0xed, 0xf8, 0x0e, 0x5b, 0xb3, 0xcc, 0x1a, 0xf7, 0x68, 0x34,
	0x6e, 0x5c, 0x66, 0xed, 0x32, 0x60, 0xd7, 0x6a, 0x97, 0xe1, 0x87, 0x05, 0x78, 0x1e, 0x96, 0x31,
	0x27, 0x0f, 0x6f, 0x98, 0x80, 0x22, 0x17, 0x79, 0x7d, 0xe6, 0x18, 0x49, 0x76, 0x75, 0x79, 0x8e,
	0x0e, 0x03, 0x6a, 0xb9, 0xc8, 0xb3, 0x19, 0xd6, 0x4a, 0x85, 0xf5, 0x69, 0x03, 0x6a, 0xbb, 0xc8,
	0xb3, 0x18, 0xd6, 0x8a, 0x6c, 0x03, 0x8e, 0x84, 0x48, 0x03, 0xda, 0x71, 0x91, 0xd7, 0x63, 0x1d,
	0x25, 0xc8, 0x3e, 0x60, 0x9e, 0xd7, 0x59, 0x40, 0xb1, 0x8b, 0xbc, 0x7b, 0x53, 0xb2, 0x7e, 0x89,
	0xd3, 0xbc, 0xce, 0x58, 0x47, 0x01, 0x4d, 0x2b, 0x8e, 0x0e, 0x4d, 0x41, 0x6c, 0xd6, 0x28, 0xf2,
	0x1c, 0x9c, 0x4c, 0x5f, 0x95, 0x76, 0x5d, 0xe4, 0x0d, 0xa6, 0x3b, 0x9b, 0xca, 0xc0, 0x1a, 0x86,
	0x3c, 0x01, 0xac, 0xbb, 0x42, 0x7b, 0x1a, 0xde, 0xd8, 0x37, 0x43, 0xa8, 0x5b, 0x2f, 0x44, 0x1d,
	0xa5, 0x3c, 0xa0, 0x7d, 0x17, 0x79, 0x88, 0x39, 0x46, 0x92, 0x97, 0xd0, 0xbb, 0x4a, 0xe4, 0x2a,
	0xc8, 0xc2, 0x82, 0x82, 0xb6, 0xd9, 0x5d, 0xb7, 0xf9, 0x94, 0xc8, 0xd5, 0x59, 0x58, 0xb0, 0xee,
	0x95, 0xd9, 0x8c, 0x4f, 0xa0, 0x3b, 0x0f, 0x23, 0x9e, 0xf2, 0x05, 0x19, 0x41, 0xaf, 0xe4, 0x5f,
	0xeb, 0xa4, 0xe4, 0x0b, 0x8a, 0x5c, 0xcb, 0xc3, 0xec, 0x56, 0xab, 0x6f, 0xa2, 0x90, 0x89, 0xc8,
	0xc3, 0x54, 0x17, 0x14, 0xb3, 0x5b, 0x3d, 0xfe, 0x6e, 0x41, 0xb7, 0xf1, 0x25, 0x73, 0xf8, 0xff,
	0x32, 0x4c, 0x6b, 0x1e, 0x64, 0xbc, 0xaa, 0xc2, 0x98, 0xeb, 0xe1, 0x1c, 0x4c, 0xf7, 0x37, 0x9e,
	0x62, 0xf2, 0x51, 0xa1, 0x67, 0x86, 0x3c, 0xcd, 0x65, 0x79, 0xcd, 0xb6, 0x2e, 0x5b, 0x21, 0xf2,
	0x0e, 0x8c, 0x0e, 0x4c, 0x53, 0x9b, 0x89, 0x7e, 0x7c, 0x87, 0xd9, 0xb9, 0x06, 0x8d, 0xd7, 0xe0,
	0xf2, 0x77, 0x64, 0xf4, 0x01, 0xee, 0xff, 0x95, 0x8d, 0x0c, 0xc1, 0xfe, 0xc2, 0xaf, 0xf5, 0xe4,
	0x60, 0xa6, 0xb6, 0xaa, 0x09, 0xfa, 0x2f, 0x7d, 0xc9, 0x7f, 0x35, 0x41, 0x13, 0xc7, 0xd6, 0x2b,
	0x34, 0x7a, 0x0d, 0xc3, 0x3f, 0xd3, 0xb6, 0x4d, 0xfb, 0xc6, 0x74, 0xa7, 0x6d, 0xda, 0x6f, 0xfd,
	0xff, 0x74, 0x0f, 0x3a, 0x6a, 0x8e, 0x08, 0x06, 0x74, 0x32, 0xfc, 0x4f, 0x2d, 0xb3, 0x21, 0x52,
	0xcb, 0x9b, 0xa1, 0x35, 0x7b, 0xff, 0x79, 0x1e, 0x27, 0x72, 0x55, 0x47, 0xea, 0x10, 0x7e, 0xce,
	0x65, 0x54, 0x86, 0x49, 0xee, 0xcb, 0xe5, 0x8b, 0xb8, 0x2c, 0x2e, 0xfc, 0x58, 0xf8, 0xad, 0x27,
	0xa7, 0xb5, 0x8d, 0xc5, 0xc6, 0x07, 0xe8, 0x27, 0x42, 0xbf, 0x02, 0x00, 0x00, 0xff, 0xff, 0x65,
	0xd6, 0xc1, 0xf8, 0xa5, 0x04, 0x00, 0x00,
}
