// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/util/memmapped_file_system.proto

package util // import "github.com/netbrain/tf-grpc/go/tensorflow/tensorflow/go/core/util"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// A message that describes one region of memmapped file.
type MemmappedFileSystemDirectoryElement struct {
	Offset               uint64   `protobuf:"varint,1,opt,name=offset,proto3" json:"offset,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MemmappedFileSystemDirectoryElement) Reset()         { *m = MemmappedFileSystemDirectoryElement{} }
func (m *MemmappedFileSystemDirectoryElement) String() string { return proto.CompactTextString(m) }
func (*MemmappedFileSystemDirectoryElement) ProtoMessage()    {}
func (*MemmappedFileSystemDirectoryElement) Descriptor() ([]byte, []int) {
	return fileDescriptor_memmapped_file_system_b3a0f57340e10486, []int{0}
}
func (m *MemmappedFileSystemDirectoryElement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemmappedFileSystemDirectoryElement.Unmarshal(m, b)
}
func (m *MemmappedFileSystemDirectoryElement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemmappedFileSystemDirectoryElement.Marshal(b, m, deterministic)
}
func (dst *MemmappedFileSystemDirectoryElement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemmappedFileSystemDirectoryElement.Merge(dst, src)
}
func (m *MemmappedFileSystemDirectoryElement) XXX_Size() int {
	return xxx_messageInfo_MemmappedFileSystemDirectoryElement.Size(m)
}
func (m *MemmappedFileSystemDirectoryElement) XXX_DiscardUnknown() {
	xxx_messageInfo_MemmappedFileSystemDirectoryElement.DiscardUnknown(m)
}

var xxx_messageInfo_MemmappedFileSystemDirectoryElement proto.InternalMessageInfo

func (m *MemmappedFileSystemDirectoryElement) GetOffset() uint64 {
	if m != nil {
		return m.Offset
	}
	return 0
}

func (m *MemmappedFileSystemDirectoryElement) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// A directory of regions in a memmapped file.
type MemmappedFileSystemDirectory struct {
	Element              []*MemmappedFileSystemDirectoryElement `protobuf:"bytes,1,rep,name=element,proto3" json:"element,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                               `json:"-"`
	XXX_unrecognized     []byte                                 `json:"-"`
	XXX_sizecache        int32                                  `json:"-"`
}

func (m *MemmappedFileSystemDirectory) Reset()         { *m = MemmappedFileSystemDirectory{} }
func (m *MemmappedFileSystemDirectory) String() string { return proto.CompactTextString(m) }
func (*MemmappedFileSystemDirectory) ProtoMessage()    {}
func (*MemmappedFileSystemDirectory) Descriptor() ([]byte, []int) {
	return fileDescriptor_memmapped_file_system_b3a0f57340e10486, []int{1}
}
func (m *MemmappedFileSystemDirectory) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MemmappedFileSystemDirectory.Unmarshal(m, b)
}
func (m *MemmappedFileSystemDirectory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MemmappedFileSystemDirectory.Marshal(b, m, deterministic)
}
func (dst *MemmappedFileSystemDirectory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MemmappedFileSystemDirectory.Merge(dst, src)
}
func (m *MemmappedFileSystemDirectory) XXX_Size() int {
	return xxx_messageInfo_MemmappedFileSystemDirectory.Size(m)
}
func (m *MemmappedFileSystemDirectory) XXX_DiscardUnknown() {
	xxx_messageInfo_MemmappedFileSystemDirectory.DiscardUnknown(m)
}

var xxx_messageInfo_MemmappedFileSystemDirectory proto.InternalMessageInfo

func (m *MemmappedFileSystemDirectory) GetElement() []*MemmappedFileSystemDirectoryElement {
	if m != nil {
		return m.Element
	}
	return nil
}

func init() {
	proto.RegisterType((*MemmappedFileSystemDirectoryElement)(nil), "tensorflow.MemmappedFileSystemDirectoryElement")
	proto.RegisterType((*MemmappedFileSystemDirectory)(nil), "tensorflow.MemmappedFileSystemDirectory")
}

func init() {
	proto.RegisterFile("tensorflow/core/util/memmapped_file_system.proto", fileDescriptor_memmapped_file_system_b3a0f57340e10486)
}

var fileDescriptor_memmapped_file_system_b3a0f57340e10486 = []byte{
	// 222 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x90, 0x31, 0x4b, 0x04, 0x31,
	0x14, 0x84, 0x89, 0x1e, 0x27, 0xc6, 0x2e, 0x85, 0x6c, 0x61, 0xb1, 0x9c, 0xcd, 0x36, 0xe6, 0x89,
	0xfe, 0x02, 0x45, 0x0f, 0x2c, 0x2c, 0x5c, 0x3b, 0x9b, 0x63, 0x37, 0xbe, 0xc4, 0x40, 0x92, 0x17,
	0x92, 0x77, 0xc8, 0xfd, 0x73, 0x4b, 0x61, 0xf5, 0xd8, 0xab, 0xc4, 0x6e, 0x06, 0x66, 0x86, 0xe1,
	0x93, 0xd7, 0x8c, 0xa9, 0x52, 0xb1, 0x81, 0x3e, 0xc1, 0x50, 0x41, 0xd8, 0xb2, 0x0f, 0x10, 0x31,
	0xc6, 0x21, 0x67, 0x7c, 0xdf, 0x58, 0x1f, 0x70, 0x53, 0x77, 0x95, 0x31, 0xea, 0x5c, 0x88, 0x49,
	0xc9, 0xb9, 0xb1, 0x7a, 0x91, 0x97, 0xcf, 0xfb, 0xe8, 0xda, 0x07, 0x7c, 0x9d, 0x82, 0x0f, 0xbe,
	0xa0, 0x61, 0x2a, 0xbb, 0xc7, 0x80, 0x11, 0x13, 0xab, 0x73, 0xb9, 0x24, 0x6b, 0x2b, 0x72, 0x23,
	0x5a, 0xd1, 0x2d, 0xfa, 0x5f, 0xa7, 0x94, 0x5c, 0xa4, 0x21, 0x62, 0x73, 0xd4, 0x8a, 0xee, 0xb4,
	0x9f, 0xf4, 0xca, 0xcb, 0x8b, 0xbf, 0x26, 0xd5, 0x93, 0x3c, 0xc1, 0x9f, 0xd9, 0x46, 0xb4, 0xc7,
	0xdd, 0xd9, 0x0d, 0xe8, 0xf9, 0x90, 0xfe, 0xc7, 0x9b, 0x7e, 0xdf, 0xbf, 0x5f, 0xbf, 0xdd, 0x39,
	0xcf, 0x1f, 0xdb, 0x51, 0x1b, 0x8a, 0x90, 0x90, 0xc7, 0x32, 0xf8, 0x04, 0x6c, 0xaf, 0x5c, 0xc9,
	0x06, 0x1c, 0xc1, 0x01, 0x9c, 0x03, 0xe9, 0x68, 0x46, 0xf5, 0x25, 0xc4, 0xb8, 0x9c, 0xc0, 0xdc,
	0x7e, 0x07, 0x00, 0x00, 0xff, 0xff, 0x6a, 0x10, 0xe8, 0x7e, 0x4c, 0x01, 0x00, 0x00,
}
