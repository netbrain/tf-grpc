// Code generated by protoc-gen-go. DO NOT EDIT.
// source: tensorflow/core/profiler/tfprof_options.proto

package profiler // import "github.com/netbrain/tf-grpc/go/tensorflow/tensorflow/go/core/profiler"

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Refers to tfprof_options.h/cc for documentation.
// Only used to pass tfprof options from Python to C++.
type OptionsProto struct {
	MaxDepth               int64    `protobuf:"varint,1,opt,name=max_depth,json=maxDepth,proto3" json:"max_depth,omitempty"`
	MinBytes               int64    `protobuf:"varint,2,opt,name=min_bytes,json=minBytes,proto3" json:"min_bytes,omitempty"`
	MinPeakBytes           int64    `protobuf:"varint,19,opt,name=min_peak_bytes,json=minPeakBytes,proto3" json:"min_peak_bytes,omitempty"`
	MinResidualBytes       int64    `protobuf:"varint,20,opt,name=min_residual_bytes,json=minResidualBytes,proto3" json:"min_residual_bytes,omitempty"`
	MinOutputBytes         int64    `protobuf:"varint,21,opt,name=min_output_bytes,json=minOutputBytes,proto3" json:"min_output_bytes,omitempty"`
	MinMicros              int64    `protobuf:"varint,3,opt,name=min_micros,json=minMicros,proto3" json:"min_micros,omitempty"`
	MinAcceleratorMicros   int64    `protobuf:"varint,22,opt,name=min_accelerator_micros,json=minAcceleratorMicros,proto3" json:"min_accelerator_micros,omitempty"`
	MinCpuMicros           int64    `protobuf:"varint,23,opt,name=min_cpu_micros,json=minCpuMicros,proto3" json:"min_cpu_micros,omitempty"`
	MinParams              int64    `protobuf:"varint,4,opt,name=min_params,json=minParams,proto3" json:"min_params,omitempty"`
	MinFloatOps            int64    `protobuf:"varint,5,opt,name=min_float_ops,json=minFloatOps,proto3" json:"min_float_ops,omitempty"`
	MinOccurrence          int64    `protobuf:"varint,17,opt,name=min_occurrence,json=minOccurrence,proto3" json:"min_occurrence,omitempty"`
	Step                   int64    `protobuf:"varint,18,opt,name=step,proto3" json:"step,omitempty"`
	OrderBy                string   `protobuf:"bytes,7,opt,name=order_by,json=orderBy,proto3" json:"order_by,omitempty"`
	AccountTypeRegexes     []string `protobuf:"bytes,8,rep,name=account_type_regexes,json=accountTypeRegexes,proto3" json:"account_type_regexes,omitempty"`
	StartNameRegexes       []string `protobuf:"bytes,9,rep,name=start_name_regexes,json=startNameRegexes,proto3" json:"start_name_regexes,omitempty"`
	TrimNameRegexes        []string `protobuf:"bytes,10,rep,name=trim_name_regexes,json=trimNameRegexes,proto3" json:"trim_name_regexes,omitempty"`
	ShowNameRegexes        []string `protobuf:"bytes,11,rep,name=show_name_regexes,json=showNameRegexes,proto3" json:"show_name_regexes,omitempty"`
	HideNameRegexes        []string `protobuf:"bytes,12,rep,name=hide_name_regexes,json=hideNameRegexes,proto3" json:"hide_name_regexes,omitempty"`
	AccountDisplayedOpOnly bool     `protobuf:"varint,13,opt,name=account_displayed_op_only,json=accountDisplayedOpOnly,proto3" json:"account_displayed_op_only,omitempty"`
	Select                 []string `protobuf:"bytes,14,rep,name=select,proto3" json:"select,omitempty"`
	Output                 string   `protobuf:"bytes,15,opt,name=output,proto3" json:"output,omitempty"`
	DumpToFile             string   `protobuf:"bytes,16,opt,name=dump_to_file,json=dumpToFile,proto3" json:"dump_to_file,omitempty"`
	XXX_NoUnkeyedLiteral   struct{} `json:"-"`
	XXX_unrecognized       []byte   `json:"-"`
	XXX_sizecache          int32    `json:"-"`
}

func (m *OptionsProto) Reset()         { *m = OptionsProto{} }
func (m *OptionsProto) String() string { return proto.CompactTextString(m) }
func (*OptionsProto) ProtoMessage()    {}
func (*OptionsProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_tfprof_options_6df6d2720efc3d4e, []int{0}
}
func (m *OptionsProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OptionsProto.Unmarshal(m, b)
}
func (m *OptionsProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OptionsProto.Marshal(b, m, deterministic)
}
func (dst *OptionsProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OptionsProto.Merge(dst, src)
}
func (m *OptionsProto) XXX_Size() int {
	return xxx_messageInfo_OptionsProto.Size(m)
}
func (m *OptionsProto) XXX_DiscardUnknown() {
	xxx_messageInfo_OptionsProto.DiscardUnknown(m)
}

var xxx_messageInfo_OptionsProto proto.InternalMessageInfo

func (m *OptionsProto) GetMaxDepth() int64 {
	if m != nil {
		return m.MaxDepth
	}
	return 0
}

func (m *OptionsProto) GetMinBytes() int64 {
	if m != nil {
		return m.MinBytes
	}
	return 0
}

func (m *OptionsProto) GetMinPeakBytes() int64 {
	if m != nil {
		return m.MinPeakBytes
	}
	return 0
}

func (m *OptionsProto) GetMinResidualBytes() int64 {
	if m != nil {
		return m.MinResidualBytes
	}
	return 0
}

func (m *OptionsProto) GetMinOutputBytes() int64 {
	if m != nil {
		return m.MinOutputBytes
	}
	return 0
}

func (m *OptionsProto) GetMinMicros() int64 {
	if m != nil {
		return m.MinMicros
	}
	return 0
}

func (m *OptionsProto) GetMinAcceleratorMicros() int64 {
	if m != nil {
		return m.MinAcceleratorMicros
	}
	return 0
}

func (m *OptionsProto) GetMinCpuMicros() int64 {
	if m != nil {
		return m.MinCpuMicros
	}
	return 0
}

func (m *OptionsProto) GetMinParams() int64 {
	if m != nil {
		return m.MinParams
	}
	return 0
}

func (m *OptionsProto) GetMinFloatOps() int64 {
	if m != nil {
		return m.MinFloatOps
	}
	return 0
}

func (m *OptionsProto) GetMinOccurrence() int64 {
	if m != nil {
		return m.MinOccurrence
	}
	return 0
}

func (m *OptionsProto) GetStep() int64 {
	if m != nil {
		return m.Step
	}
	return 0
}

func (m *OptionsProto) GetOrderBy() string {
	if m != nil {
		return m.OrderBy
	}
	return ""
}

func (m *OptionsProto) GetAccountTypeRegexes() []string {
	if m != nil {
		return m.AccountTypeRegexes
	}
	return nil
}

func (m *OptionsProto) GetStartNameRegexes() []string {
	if m != nil {
		return m.StartNameRegexes
	}
	return nil
}

func (m *OptionsProto) GetTrimNameRegexes() []string {
	if m != nil {
		return m.TrimNameRegexes
	}
	return nil
}

func (m *OptionsProto) GetShowNameRegexes() []string {
	if m != nil {
		return m.ShowNameRegexes
	}
	return nil
}

func (m *OptionsProto) GetHideNameRegexes() []string {
	if m != nil {
		return m.HideNameRegexes
	}
	return nil
}

func (m *OptionsProto) GetAccountDisplayedOpOnly() bool {
	if m != nil {
		return m.AccountDisplayedOpOnly
	}
	return false
}

func (m *OptionsProto) GetSelect() []string {
	if m != nil {
		return m.Select
	}
	return nil
}

func (m *OptionsProto) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

func (m *OptionsProto) GetDumpToFile() string {
	if m != nil {
		return m.DumpToFile
	}
	return ""
}

type AdvisorOptionsProto struct {
	// checker name -> a dict of key-value options.
	Checkers             map[string]*AdvisorOptionsProto_CheckerOption `protobuf:"bytes,1,rep,name=checkers,proto3" json:"checkers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                                      `json:"-"`
	XXX_unrecognized     []byte                                        `json:"-"`
	XXX_sizecache        int32                                         `json:"-"`
}

func (m *AdvisorOptionsProto) Reset()         { *m = AdvisorOptionsProto{} }
func (m *AdvisorOptionsProto) String() string { return proto.CompactTextString(m) }
func (*AdvisorOptionsProto) ProtoMessage()    {}
func (*AdvisorOptionsProto) Descriptor() ([]byte, []int) {
	return fileDescriptor_tfprof_options_6df6d2720efc3d4e, []int{1}
}
func (m *AdvisorOptionsProto) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvisorOptionsProto.Unmarshal(m, b)
}
func (m *AdvisorOptionsProto) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvisorOptionsProto.Marshal(b, m, deterministic)
}
func (dst *AdvisorOptionsProto) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvisorOptionsProto.Merge(dst, src)
}
func (m *AdvisorOptionsProto) XXX_Size() int {
	return xxx_messageInfo_AdvisorOptionsProto.Size(m)
}
func (m *AdvisorOptionsProto) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvisorOptionsProto.DiscardUnknown(m)
}

var xxx_messageInfo_AdvisorOptionsProto proto.InternalMessageInfo

func (m *AdvisorOptionsProto) GetCheckers() map[string]*AdvisorOptionsProto_CheckerOption {
	if m != nil {
		return m.Checkers
	}
	return nil
}

type AdvisorOptionsProto_CheckerOption struct {
	Options              map[string]string `protobuf:"bytes,1,rep,name=options,proto3" json:"options,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *AdvisorOptionsProto_CheckerOption) Reset()         { *m = AdvisorOptionsProto_CheckerOption{} }
func (m *AdvisorOptionsProto_CheckerOption) String() string { return proto.CompactTextString(m) }
func (*AdvisorOptionsProto_CheckerOption) ProtoMessage()    {}
func (*AdvisorOptionsProto_CheckerOption) Descriptor() ([]byte, []int) {
	return fileDescriptor_tfprof_options_6df6d2720efc3d4e, []int{1, 1}
}
func (m *AdvisorOptionsProto_CheckerOption) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AdvisorOptionsProto_CheckerOption.Unmarshal(m, b)
}
func (m *AdvisorOptionsProto_CheckerOption) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AdvisorOptionsProto_CheckerOption.Marshal(b, m, deterministic)
}
func (dst *AdvisorOptionsProto_CheckerOption) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AdvisorOptionsProto_CheckerOption.Merge(dst, src)
}
func (m *AdvisorOptionsProto_CheckerOption) XXX_Size() int {
	return xxx_messageInfo_AdvisorOptionsProto_CheckerOption.Size(m)
}
func (m *AdvisorOptionsProto_CheckerOption) XXX_DiscardUnknown() {
	xxx_messageInfo_AdvisorOptionsProto_CheckerOption.DiscardUnknown(m)
}

var xxx_messageInfo_AdvisorOptionsProto_CheckerOption proto.InternalMessageInfo

func (m *AdvisorOptionsProto_CheckerOption) GetOptions() map[string]string {
	if m != nil {
		return m.Options
	}
	return nil
}

func init() {
	proto.RegisterType((*OptionsProto)(nil), "tensorflow.tfprof.OptionsProto")
	proto.RegisterType((*AdvisorOptionsProto)(nil), "tensorflow.tfprof.AdvisorOptionsProto")
	proto.RegisterMapType((map[string]*AdvisorOptionsProto_CheckerOption)(nil), "tensorflow.tfprof.AdvisorOptionsProto.CheckersEntry")
	proto.RegisterType((*AdvisorOptionsProto_CheckerOption)(nil), "tensorflow.tfprof.AdvisorOptionsProto.CheckerOption")
	proto.RegisterMapType((map[string]string)(nil), "tensorflow.tfprof.AdvisorOptionsProto.CheckerOption.OptionsEntry")
}

func init() {
	proto.RegisterFile("tensorflow/core/profiler/tfprof_options.proto", fileDescriptor_tfprof_options_6df6d2720efc3d4e)
}

var fileDescriptor_tfprof_options_6df6d2720efc3d4e = []byte{
	// 672 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x9c, 0x94, 0xdd, 0x6e, 0x1a, 0x3b,
	0x10, 0x80, 0x45, 0xc8, 0x0f, 0x38, 0x24, 0x21, 0x0e, 0x87, 0xb3, 0xc9, 0xd1, 0x91, 0x50, 0x74,
	0x8e, 0x84, 0xaa, 0x06, 0xaa, 0x36, 0x17, 0x6d, 0xee, 0xf2, 0x5b, 0xa9, 0x52, 0x0b, 0x5a, 0xe5,
	0xaa, 0xbd, 0x58, 0x19, 0xef, 0x00, 0x16, 0xbb, 0xb6, 0x6b, 0x7b, 0x93, 0xec, 0x03, 0xf4, 0x5d,
	0xfa, 0x2e, 0x7d, 0xa9, 0xca, 0x3f, 0x10, 0x48, 0xdb, 0x8b, 0xf6, 0xce, 0x33, 0xdf, 0x67, 0xcf,
	0x4e, 0xc2, 0x0c, 0x3a, 0x31, 0xc0, 0xb5, 0x50, 0xe3, 0x4c, 0xdc, 0xf7, 0xa9, 0x50, 0xd0, 0x97,
	0x4a, 0x8c, 0x59, 0x06, 0xaa, 0x6f, 0xc6, 0xf6, 0x98, 0x08, 0x69, 0x98, 0xe0, 0xba, 0x27, 0x95,
	0x30, 0x02, 0xef, 0x3f, 0xea, 0x3d, 0x2f, 0x1c, 0x7f, 0xdb, 0x44, 0x8d, 0x81, 0x97, 0x86, 0xce,
	0xf9, 0x07, 0xd5, 0x73, 0xf2, 0x90, 0xa4, 0x20, 0xcd, 0x34, 0xaa, 0x74, 0x2a, 0xdd, 0x6a, 0x5c,
	0xcb, 0xc9, 0xc3, 0x95, 0x8d, 0x1d, 0x64, 0x3c, 0x19, 0x95, 0x06, 0x74, 0xb4, 0x16, 0x20, 0xe3,
	0x17, 0x36, 0xc6, 0xff, 0xa1, 0x5d, 0x0b, 0x25, 0x90, 0x59, 0x30, 0x0e, 0x9c, 0xd1, 0xc8, 0x19,
	0x1f, 0x02, 0x99, 0x79, 0xeb, 0x39, 0xc2, 0xd6, 0x52, 0xa0, 0x59, 0x5a, 0x90, 0x2c, 0x98, 0x2d,
	0x67, 0x36, 0x73, 0xc6, 0xe3, 0x00, 0xbc, 0xdd, 0x45, 0x36, 0x97, 0x88, 0xc2, 0xc8, 0xc2, 0x04,
	0xf7, 0x2f, 0xe7, 0xda, 0x5a, 0x03, 0x97, 0xf6, 0xe6, 0xbf, 0x08, 0x59, 0x33, 0x67, 0x54, 0x09,
	0x1d, 0x55, 0x9d, 0x63, 0x3f, 0xf6, 0xbd, 0x4b, 0xe0, 0x53, 0xd4, 0xb6, 0x98, 0x50, 0x0a, 0x19,
	0x28, 0x62, 0x84, 0x9a, 0xab, 0x6d, 0xa7, 0xb6, 0x72, 0xc6, 0xcf, 0x1f, 0x61, 0xb8, 0x15, 0x5a,
	0xa2, 0xb2, 0x98, 0xdb, 0x7f, 0x2f, 0x5a, 0xba, 0x94, 0x45, 0xb0, 0x42, 0x69, 0x49, 0x14, 0xc9,
	0x75, 0xb4, 0xbe, 0x28, 0x3d, 0x74, 0x09, 0x7c, 0x8c, 0x76, 0x2c, 0x1e, 0x67, 0x82, 0x98, 0x44,
	0x48, 0x1d, 0x6d, 0x38, 0x63, 0x3b, 0x67, 0xfc, 0xc6, 0xe6, 0x06, 0x52, 0xe3, 0xff, 0x7d, 0x21,
	0x41, 0x69, 0xa1, 0x14, 0x70, 0x0a, 0xd1, 0xbe, 0x93, 0xec, 0xcd, 0xc1, 0x22, 0x89, 0x31, 0x5a,
	0xd7, 0x06, 0x64, 0x84, 0x1d, 0x74, 0x67, 0x7c, 0x88, 0x6a, 0x42, 0xa5, 0xa0, 0x92, 0x51, 0x19,
	0x6d, 0x75, 0x2a, 0xdd, 0x7a, 0xbc, 0xe5, 0xe2, 0x8b, 0x12, 0xbf, 0x40, 0x2d, 0x42, 0xa9, 0x28,
	0xb8, 0x49, 0x4c, 0x29, 0x21, 0x51, 0x30, 0x81, 0x07, 0xd0, 0x51, 0xad, 0x53, 0xed, 0xd6, 0x63,
	0x1c, 0xd8, 0x6d, 0x29, 0x21, 0xf6, 0xc4, 0xfe, 0x77, 0xb4, 0x21, 0xca, 0x24, 0x9c, 0xe4, 0x8f,
	0x7e, 0xdd, 0xf9, 0x4d, 0x47, 0x3e, 0x90, 0x7c, 0x61, 0x3f, 0x43, 0xfb, 0x46, 0xb1, 0x7c, 0x55,
	0x46, 0x4e, 0xde, 0xb3, 0xe0, 0x89, 0xab, 0xa7, 0xe2, 0x7e, 0xd5, 0xdd, 0xf6, 0xae, 0x05, 0x4f,
	0xdc, 0x29, 0x4b, 0x61, 0xd5, 0x6d, 0x78, 0xd7, 0x82, 0x65, 0xf7, 0x0d, 0x3a, 0x9c, 0xf7, 0x98,
	0x32, 0x2d, 0x33, 0x52, 0x42, 0x9a, 0x08, 0x99, 0x08, 0x9e, 0x95, 0xd1, 0x4e, 0xa7, 0xd2, 0xad,
	0xc5, 0xed, 0x20, 0x5c, 0xcd, 0xf9, 0x40, 0x0e, 0x78, 0x56, 0xe2, 0x36, 0xda, 0xd4, 0x90, 0x01,
	0x35, 0xd1, 0xae, 0x7b, 0x3b, 0x44, 0x36, 0xef, 0x7f, 0x70, 0xd1, 0x9e, 0xfb, 0x7b, 0x86, 0x08,
	0x77, 0x50, 0x23, 0x2d, 0x72, 0x99, 0x18, 0x91, 0xd8, 0x21, 0x8b, 0x9a, 0x8e, 0x22, 0x9b, 0xbb,
	0x15, 0x37, 0x2c, 0x83, 0xe3, 0x2f, 0x55, 0x74, 0x70, 0x9e, 0xde, 0x31, 0x2d, 0xd4, 0xca, 0x50,
	0x0d, 0x51, 0x8d, 0x4e, 0x81, 0xce, 0x40, 0xe9, 0xa8, 0xd2, 0xa9, 0x76, 0xb7, 0x5f, 0x9e, 0xf6,
	0x7e, 0x98, 0xc5, 0xde, 0x4f, 0x6e, 0xf6, 0x2e, 0xc3, 0xb5, 0x6b, 0x6e, 0x54, 0x19, 0x2f, 0x5e,
	0x39, 0xfa, 0x8c, 0x76, 0x56, 0x10, 0x6e, 0xa2, 0xea, 0x0c, 0x4a, 0x37, 0xb1, 0xf5, 0xd8, 0x1e,
	0xf1, 0x3b, 0xb4, 0x71, 0x47, 0xb2, 0x02, 0xdc, 0xa0, 0xfe, 0x76, 0x45, 0x9f, 0x8b, 0xfd, 0x13,
	0x67, 0x6b, 0xaf, 0x2b, 0x47, 0x5f, 0x2b, 0x8b, 0x9a, 0x1e, 0xe2, 0x4f, 0x68, 0x2b, 0x2c, 0x98,
	0xd0, 0xd5, 0xf9, 0x9f, 0xd4, 0xe8, 0x05, 0xe4, 0x5b, 0x9c, 0xbf, 0x78, 0x74, 0xb6, 0x58, 0x4c,
	0xbf, 0x6a, 0xb0, 0xb5, 0xdc, 0x60, 0x7d, 0xe9, 0x53, 0x2f, 0xde, 0x7e, 0xbc, 0x9e, 0x30, 0x33,
	0x2d, 0x46, 0x3d, 0x2a, 0xf2, 0x3e, 0x07, 0x33, 0x52, 0x84, 0xf1, 0xbe, 0x19, 0x9f, 0x4c, 0x94,
	0xa4, 0xfd, 0x89, 0xe8, 0x2f, 0x2d, 0xce, 0xa5, 0xe3, 0x44, 0xac, 0xae, 0xd1, 0xd1, 0xa6, 0x5b,
	0x9c, 0xaf, 0xbe, 0x07, 0x00, 0x00, 0xff, 0xff, 0x5c, 0x7f, 0xdc, 0x31, 0x69, 0x05, 0x00, 0x00,
}
